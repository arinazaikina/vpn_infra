- name: Находим основной сетевой интерфейс VPN сервера
  set_fact:
    main_interface: "{{ ansible_default_ipv4.interface }}"
  when: ansible_default_ipv4.interface is defined and 'vpn' in group_names

- name: Разрешение входящих соединений для VPN (UDP/1194)
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    in_interface: "{{ main_interface }}"
    protocol: udp
    destination_port: "{{ vpn_udp_port }}"
    ctstate:
      - NEW
    jump: ACCEPT
  when: "'vpn' in group_names"

- name: Разрешение входящих соединений на интерфейсе tun+
  ansible.builtin.iptables:
    table: filter
    chain: INPUT
    in_interface: tun+
    jump: ACCEPT
  when: "'vpn' in group_names"

- name: Разрешение трафика через интерфейс tun+
  ansible.builtin.iptables:
    table: filter
    chain: FORWARD
    in_interface: tun+
    jump: ACCEPT
  when: "'vpn' in group_names"

- name: Разрешение ответного трафика на интерфейсе tun+
  ansible.builtin.iptables:
    table: filter
    chain: FORWARD
    in_interface: tun+
    out_interface: "{{ main_interface }}"
    ctstate:
      - RELATED
      - ESTABLISHED
    jump: ACCEPT
  when: "'vpn' in group_names"

- name: Разрешение ответного трафика на основном интерфейсе
  ansible.builtin.iptables:
    table: filter
    chain: FORWARD
    in_interface: "{{ main_interface }}"
    out_interface: tun+
    ctstate:
      - RELATED
      - ESTABLISHED
    jump: ACCEPT
  when: "'vpn' in group_names"

- name: Настройка NAT для клиентов VPN
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    source: "{{ vpn_client_network }}"
    out_interface: "{{ main_interface }}"
    jump: MASQUERADE
  when: "'vpn' in group_names"

- name: Сохранение настроек iptables
  include_tasks: ../includes/iptables_save.yml
